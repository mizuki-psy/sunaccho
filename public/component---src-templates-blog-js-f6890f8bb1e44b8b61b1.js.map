{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog.js","webpack:///./src/components/PostList.js"],"names":["Pagination","pageContext","previousPagePath","pathPrefix","nextPagePath","className","role","to","rel","IndexPage","render","this","props","data","posts","allWordpressPost","edges","Layout","PostList","title","React","Component","pageQuery","map","post","node","style","border","padding","key","id","slug","date","author","name","dangerouslySetInnerHTML","__html","excerpt","replace"],"mappings":"iPA4BeA,EAzBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YACZC,GAD0C,EAAjBC,WACUF,EAAnCC,kBAAkBE,EAAiBH,EAAjBG,aAE1B,OACE,yBAAKC,UAAU,aAAaC,KAAK,cAC/B,yBAAKD,UAAU,sBACZH,GACC,yBAAKG,UAAU,eACb,kBAAC,IAAD,CAAME,GAAIL,EAAkBM,IAAI,QAAhC,aAKHJ,GACC,yBAAKC,UAAU,eACb,kBAAC,IAAD,CAAME,GAAIH,EAAcI,IAAI,QAA5B,Y,ICXSC,E,gLACnBC,OAAA,WAAU,IAAD,EACuBC,KAAKC,MAA3BC,EADD,EACCA,KAAMZ,EADP,EACOA,YACCa,EAAUD,EAAKE,iBAAtBC,MAER,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUJ,MAAOA,EAAOK,MAAM,iBAC9B,kBAAC,EAAD,CAAYlB,YAAaA,EAAaE,WAAW,Q,GARlBiB,IAAMC,WA0BhCC,EAAS,c,iIC7BDb,E,gLACnBC,OAAA,WAAU,IAAD,EACkBC,KAAKC,MAAtBE,EADD,EACCA,MAAOK,EADR,EACQA,MAEf,OACE,6BAASd,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,kCAAkCc,IAEjDL,EAAMS,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,yBACEpB,UAAU,UACVqB,MAAO,CAAEC,OAAQ,oBAAqBC,QAAS,WAC/CC,IAAKL,EAAKM,IAEV,2BACE,kBAAC,IAAD,CAAMzB,UAAU,mBAAmBE,GAAIiB,EAAKO,MACzCP,EAAKL,OAER,qCACA,+BACGK,EAAKQ,KADR,eAC0B,IACxB,kBAAC,IAAD,CAAMzB,GAAE,WAAaiB,EAAKS,OAAOF,MAC9BP,EAAKS,OAAOC,QAInB,6BACE,yBACEC,wBAAyB,CACvBC,OAAQZ,EAAKa,QAAQC,QAAQ,wBAAyB,OAG1D,kBAAC,IAAD,CAAMjC,UAAU,kBAAkBE,GAAIiB,EAAKO,MAA3C,0B,GAlCuBX,IAAMC","file":"component---src-templates-blog-js-f6890f8bb1e44b8b61b1.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext, pathPrefix }) => {\n  const { previousPagePath, nextPagePath } = pageContext\n\n  return (\n    <nav className=\"pagination\" role=\"navigation\">\n      <div className=\"navbar navbar-menu\">\n        {previousPagePath && (\n          <div className=\"navbar-item\">\n            <Link to={previousPagePath} rel=\"prev\">\n              Previous\n            </Link>\n          </div>\n        )}\n        {nextPagePath && (\n          <div className=\"navbar-item\">\n            <Link to={nextPagePath} rel=\"next\">\n              Next\n            </Link>\n          </div>\n        )}\n      </div>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\nimport Pagination from '../components/Pagination'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data, pageContext } = this.props\n    const { edges: posts } = data.allWordpressPost\n\n    return (\n      <Layout>\n        <PostList posts={posts} title=\"Latest posts\" />\n        <Pagination pageContext={pageContext} pathPrefix=\"/\" />\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allWordpressPost: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    numPages: PropTypes.number,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery($limit: Int!, $skip: Int!) {\n    allWordpressPost(\n      sort: { fields: date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...PostListFields\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { posts, title } = this.props\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"content\">\n            <h1 className=\"has-text-weight-bold is-size-2\">{title}</h1>\n          </div>\n          {posts.map(({ node: post }) => (\n            <div\n              className=\"content\"\n              style={{ border: '1px solid #eaecee', padding: '2em 4em' }}\n              key={post.id}\n            >\n              <p>\n                <Link className=\"has-text-primary\" to={post.slug}>\n                  {post.title}\n                </Link>\n                <span> &bull; </span>\n                <small>\n                  {post.date} - posted by{' '}\n                  <Link to={`/author/${post.author.slug}`}>\n                    {post.author.name}\n                  </Link>\n                </small>\n              </p>\n              <div>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: post.excerpt.replace(/<p class=\"link-more.*/, ''),\n                  }}\n                />\n                <Link className=\"button is-small\" to={post.slug}>\n                  Keep Reading â†’\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport const pageQuery = graphql`\n  fragment PostListFields on wordpress__POST {\n    id\n    title\n    excerpt\n    author {\n      name\n      slug\n      avatar_urls {\n        wordpress_48\n      }\n    }\n    date(formatString: \"MMMM DD, YYYY\")\n    slug\n  }\n`\n"],"sourceRoot":""}