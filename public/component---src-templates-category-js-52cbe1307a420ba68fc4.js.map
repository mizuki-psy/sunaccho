{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/components/PostList.js"],"names":["Category","props","data","pageContext","allWordpressPost","posts","edges","totalCount","siteTitle","site","siteMetadata","title","category","name","pageQuery","IndexPage","render","this","className","map","post","node","style","border","padding","key","id","to","slug","date","author","dangerouslySetInnerHTML","__html","excerpt","replace","React","Component"],"mappings":"4NAuBeA,UAjBE,SAAAC,GAAU,IACjBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YADU,EAEaD,EAAKE,iBAA3BC,EAFS,EAEhBC,MAAcC,EAFE,EAEFA,WACPC,EAAcN,EAAKO,KAAKC,aAA/BC,MACMC,EAAaT,EAAnBU,KACFF,EAAWJ,EAAN,SACM,IAAfA,EAAmB,GAAK,KADf,YAECK,EAFD,aAIX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQD,MAAUC,EAAL,MAAmBJ,IAChC,kBAAC,IAAD,CAAUH,MAAOA,EAAOM,MAAOA,MAO9B,IAAMG,EAAS,c,iICrBDC,E,gLACnBC,OAAA,WAAU,IAAD,EACkBC,KAAKhB,MAAtBI,EADD,EACCA,MAAOM,EADR,EACQA,MAEf,OACE,6BAASO,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,kCAAkCP,IAEjDN,EAAMc,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,yBACEH,UAAU,UACVI,MAAO,CAAEC,OAAQ,oBAAqBC,QAAS,WAC/CC,IAAKL,EAAKM,IAEV,2BACE,kBAAC,IAAD,CAAMR,UAAU,mBAAmBS,GAAIP,EAAKQ,MACzCR,EAAKT,OAER,qCACA,+BACGS,EAAKS,KADR,eAC0B,IACxB,kBAAC,IAAD,CAAMF,GAAE,WAAaP,EAAKU,OAAOF,MAC9BR,EAAKU,OAAOjB,QAInB,6BACE,yBACEkB,wBAAyB,CACvBC,OAAQZ,EAAKa,QAAQC,QAAQ,wBAAyB,OAG1D,kBAAC,IAAD,CAAMhB,UAAU,kBAAkBS,GAAIP,EAAKQ,MAA3C,0B,GAlCuBO,IAAMC","file":"component---src-templates-category-js-52cbe1307a420ba68fc4.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\n\nconst Category = props => {\n  const { data, pageContext } = props\n  const { edges: posts, totalCount } = data.allWordpressPost\n  const { title: siteTitle } = data.site.siteMetadata\n  const { name: category } = pageContext\n  const title = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } in the “${category}” category`\n\n  return (\n    <Layout>\n      <Helmet title={`${category} | ${siteTitle}`} />\n      <PostList posts={posts} title={title} />\n    </Layout>\n  )\n}\n\nexport default Category\n\nexport const pageQuery = graphql`\n  query CategoryPage($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allWordpressPost(\n      filter: { categories: { elemMatch: { slug: { eq: $slug } } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          ...PostListFields\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { posts, title } = this.props\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"content\">\n            <h1 className=\"has-text-weight-bold is-size-2\">{title}</h1>\n          </div>\n          {posts.map(({ node: post }) => (\n            <div\n              className=\"content\"\n              style={{ border: '1px solid #eaecee', padding: '2em 4em' }}\n              key={post.id}\n            >\n              <p>\n                <Link className=\"has-text-primary\" to={post.slug}>\n                  {post.title}\n                </Link>\n                <span> &bull; </span>\n                <small>\n                  {post.date} - posted by{' '}\n                  <Link to={`/author/${post.author.slug}`}>\n                    {post.author.name}\n                  </Link>\n                </small>\n              </p>\n              <div>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: post.excerpt.replace(/<p class=\"link-more.*/, ''),\n                  }}\n                />\n                <Link className=\"button is-small\" to={post.slug}>\n                  Keep Reading →\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport const pageQuery = graphql`\n  fragment PostListFields on wordpress__POST {\n    id\n    title\n    excerpt\n    author {\n      name\n      slug\n      avatar_urls {\n        wordpress_48\n      }\n    }\n    date(formatString: \"MMMM DD, YYYY\")\n    slug\n  }\n`\n"],"sourceRoot":""}